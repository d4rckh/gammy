/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/achievements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getGameAchievements"];
        put: operations["updateAchievement"];
        post: operations["createAchievement"];
        delete: operations["deleteAchievement"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/achievements/player/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAchievementStatusForPlayer"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/achievements/player/{playerId}/{apiName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["unlockPlayerAchievement"];
        delete: operations["removePlayerAchievement"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getInteractions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/player/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPlayerInteractions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/track/{playerId}/{interactionApiName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["trackInteraction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/type": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getGameInteractions"];
        put: operations["updateGameInteraction"];
        post: operations["createInteraction"];
        delete: operations["deleteGameInteraction"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/type/{apiName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getInteractionsByApiName"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/leaderboards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLeaderboards"];
        put: operations["updateLeaderboard"];
        post: operations["createLeaderboard"];
        delete: operations["deleteLeaderboard"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/leaderboards/{apiName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getLeaderboardEntries"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/parameters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getParameters"];
        put: operations["updateParameter"];
        post: operations["createParameter"];
        delete: operations["deleteParameter"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/parameters/overrides": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["updatePlayerParameterOverride"];
        post: operations["createPlayerParameterOverride"];
        delete: operations["deletePlayerParameterOverride"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/parameters/overrides/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPlayerParameterOverrides"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/parameters/player/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getParametersForPlayer"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/players": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findAll"];
        put: operations["updatePlayer"];
        post: operations["createPlayer"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/players/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["findById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getReports"];
        put?: never;
        post: operations["reportPlayer"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/by/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getReportsBy"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/for/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getReportsFor"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getGameStats"];
        put: operations["updateGameStat"];
        post: operations["createGameStat"];
        delete: operations["deleteGameStat"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/player/{playerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPlayerStats"];
        put?: never;
        post: operations["updatePlayerStat"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/player/{playerId}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPlayerStatHistory"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats/player/{playerId}/{statApiName}/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPlayerStatHistory_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["me"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        GameAchievementEntity: {
            /** Format: int64 */
            id?: number | null;
            name?: string;
            apiName?: string;
            description?: string;
            unlockExpression?: string | null;
        };
        GameInteractionEntity: {
            /** Format: int64 */
            id?: number | null;
            apiName?: string;
            displayName?: string;
            streak?: components["schemas"]["GameInteractionStreak"];
        };
        /** @enum {string} */
        GameInteractionStreak: "NONE" | "DAILY";
        GameStatEntity: {
            /** Format: int64 */
            id?: number | null;
            apiName?: string;
            displayName?: string;
            description?: string;
            type?: components["schemas"]["GameStatType"];
            defaultValue?: number;
            maxValue?: number | null;
            minValue?: number | null;
            maxChange?: number | null;
            onlyIncrement?: boolean;
        };
        /** @enum {string} */
        GameStatType: "INTEGER" | "FLOAT";
        LeaderboardCreateRequest: {
            displayName?: string;
            apiName?: string;
            description?: string;
            sortMethod?: components["schemas"]["LeaderboardSortMethod"];
            gameStatApiName?: string;
        };
        LeaderboardEntity: {
            /** Format: int64 */
            id?: number | null;
            apiName?: string;
            displayName?: string;
            description?: string;
            sortMethod?: components["schemas"]["LeaderboardSortMethod"];
            gameStat?: components["schemas"]["GameStatEntity"];
        };
        LeaderboardEntries: {
            leaderboard: components["schemas"]["LeaderboardEntity"];
            entries: components["schemas"]["LeaderboardEntry"][];
        };
        LeaderboardEntry: {
            player: components["schemas"]["PlayerEntity"];
            value: number;
            /** Format: int64 */
            rank: number;
        };
        /** @enum {string} */
        LeaderboardSortMethod: "ASCENDING" | "DESCENDING";
        ParameterEntity: {
            /** Format: int64 */
            id?: number | null;
            path?: string;
            type?: components["schemas"]["ParameterType"];
            value?: string;
        };
        /** @enum {string} */
        ParameterType: "STRING" | "FLOAT" | "INTEGER" | "BOOLEAN";
        PlayerAchievementEntity: {
            /** Format: int64 */
            id?: number | null;
            gameAchievement?: components["schemas"]["GameAchievementEntity"];
            player?: components["schemas"]["PlayerEntity"];
            /** Format: date-time */
            createdAt?: string;
        };
        PlayerEntity: {
            /** Format: int64 */
            id?: number | null;
            username?: string;
            hashedPassword?: string;
            banned?: boolean;
        };
        /** @enum {string} */
        PlayerGameStatUpdateMethod: "LOWEST" | "LARGEST" | "FORCE";
        PlayerGameStatUpdateRequest: {
            gameStatApiName?: string;
            newValue?: number;
            updateMethod?: components["schemas"]["PlayerGameStatUpdateMethod"];
        };
        PlayerInteractionEntity: {
            /** Format: int64 */
            id?: number | null;
            gameInteraction?: components["schemas"]["GameInteractionEntity"];
            player?: components["schemas"]["PlayerEntity"];
            /** Format: date-time */
            timestamp?: string;
            /** Format: int64 */
            streak?: number;
        };
        PlayerOverrideParameterRequest: {
            value?: string;
            path?: string;
            /** Format: int64 */
            playerId?: number;
        };
        PlayerParameterOverrideEntity: {
            path?: string;
            /** Format: int64 */
            id?: number | null;
            parameter?: components["schemas"]["ParameterEntity"];
            player?: components["schemas"]["PlayerEntity"];
            value?: string;
        };
        PlayerRegistrationRequest: {
            username?: string;
            password?: string;
        };
        PlayerReportEntity: {
            /** Format: int64 */
            id?: number | null;
            reporterPlayer?: components["schemas"]["PlayerEntity"] | null;
            reportedPlayer?: components["schemas"]["PlayerEntity"];
            text?: string;
        };
        PlayerStatEntity: {
            /** Format: int64 */
            id?: number | null;
            gameStat?: components["schemas"]["GameStatEntity"];
            player?: components["schemas"]["PlayerEntity"];
            value?: number;
            /** Format: date-time */
            lastUpdate?: string;
        };
        ReportPlayerRequest: {
            /** Format: int64 */
            reporterPlayerId: number;
            /** Format: int64 */
            reportedPlayerId: number;
            text: string;
        };
        StatUpdateHistoryEntity: {
            /** Format: int64 */
            id: number | null;
            player: components["schemas"]["PlayerEntity"];
            gameStat: components["schemas"]["GameStatEntity"];
            oldValue: number;
            newValue: number;
            /** Format: date-time */
            timestamp: string;
            suspicious: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getGameAchievements: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getGameAchievements 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameAchievementEntity"][];
                };
            };
        };
    };
    updateAchievement: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameAchievementEntity"];
            };
        };
        responses: {
            /** @description updateAchievement 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameAchievementEntity"];
                };
            };
        };
    };
    createAchievement: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameAchievementEntity"];
            };
        };
        responses: {
            /** @description createAchievement 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameAchievementEntity"];
                };
            };
        };
    };
    deleteAchievement: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameAchievementEntity"];
            };
        };
        responses: {
            /** @description deleteAchievement 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAchievementStatusForPlayer: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getAchievementStatusForPlayer 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: boolean;
                    };
                };
            };
        };
    };
    unlockPlayerAchievement: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
                apiName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description unlockPlayerAchievement 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerAchievementEntity"];
                };
            };
        };
    };
    removePlayerAchievement: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
                apiName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description removePlayerAchievement 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getInteractions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getInteractions 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerInteractionEntity"][];
                };
            };
        };
    };
    getPlayerInteractions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getPlayerInteractions 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerInteractionEntity"][];
                };
            };
        };
    };
    trackInteraction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
                interactionApiName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description trackInteraction 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerInteractionEntity"];
                };
            };
        };
    };
    getGameInteractions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getGameInteractions 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameInteractionEntity"][];
                };
            };
        };
    };
    updateGameInteraction: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameInteractionEntity"];
            };
        };
        responses: {
            /** @description updateGameInteraction 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameInteractionEntity"];
                };
            };
        };
    };
    createInteraction: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameInteractionEntity"];
            };
        };
        responses: {
            /** @description createInteraction 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameInteractionEntity"];
                };
            };
        };
    };
    deleteGameInteraction: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameInteractionEntity"];
            };
        };
        responses: {
            /** @description deleteGameInteraction 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getInteractionsByApiName: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                apiName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getInteractionsByApiName 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerInteractionEntity"][];
                };
            };
        };
    };
    getLeaderboards: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getLeaderboards 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LeaderboardEntity"][];
                };
            };
        };
    };
    updateLeaderboard: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LeaderboardEntity"];
            };
        };
        responses: {
            /** @description updateLeaderboard 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LeaderboardEntity"];
                };
            };
        };
    };
    createLeaderboard: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LeaderboardCreateRequest"];
            };
        };
        responses: {
            /** @description createLeaderboard 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LeaderboardEntity"];
                };
            };
        };
    };
    deleteLeaderboard: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LeaderboardEntity"];
            };
        };
        responses: {
            /** @description deleteLeaderboard 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getLeaderboardEntries: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                apiName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getLeaderboardEntries 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LeaderboardEntries"];
                };
            };
        };
    };
    getParameters: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getParameters 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ParameterEntity"][];
                };
            };
        };
    };
    updateParameter: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ParameterEntity"];
            };
        };
        responses: {
            /** @description updateParameter 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ParameterEntity"];
                };
            };
        };
    };
    createParameter: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ParameterEntity"];
            };
        };
        responses: {
            /** @description createParameter 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ParameterEntity"];
                };
            };
        };
    };
    deleteParameter: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ParameterEntity"];
            };
        };
        responses: {
            /** @description deleteParameter 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updatePlayerParameterOverride: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlayerParameterOverrideEntity"];
            };
        };
        responses: {
            /** @description updatePlayerParameterOverride 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerParameterOverrideEntity"];
                };
            };
        };
    };
    createPlayerParameterOverride: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlayerOverrideParameterRequest"];
            };
        };
        responses: {
            /** @description createPlayerParameterOverride 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerParameterOverrideEntity"];
                };
            };
        };
    };
    deletePlayerParameterOverride: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlayerParameterOverrideEntity"];
            };
        };
        responses: {
            /** @description deletePlayerParameterOverride 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerParameterOverrideEntity"];
                };
            };
        };
    };
    getPlayerParameterOverrides: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getPlayerParameterOverrides 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerParameterOverrideEntity"][];
                };
            };
        };
    };
    getParametersForPlayer: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getParametersForPlayer 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description findAll 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerEntity"][];
                };
            };
        };
    };
    updatePlayer: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlayerEntity"];
            };
        };
        responses: {
            /** @description updatePlayer 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerEntity"];
                };
            };
        };
    };
    createPlayer: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlayerRegistrationRequest"];
            };
        };
        responses: {
            /** @description createPlayer 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerEntity"];
                };
            };
        };
    };
    findById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description findById 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerEntity"];
                };
            };
        };
    };
    getReports: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getReports 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerReportEntity"][];
                };
            };
        };
    };
    reportPlayer: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReportPlayerRequest"];
            };
        };
        responses: {
            /** @description reportPlayer 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerReportEntity"];
                };
            };
        };
    };
    getReportsBy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getReportsBy 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerReportEntity"][];
                };
            };
        };
    };
    getReportsFor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getReportsFor 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerReportEntity"][];
                };
            };
        };
    };
    getGameStats: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getGameStats 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameStatEntity"][];
                };
            };
        };
    };
    updateGameStat: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameStatEntity"];
            };
        };
        responses: {
            /** @description updateGameStat 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameStatEntity"];
                };
            };
        };
    };
    createGameStat: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameStatEntity"];
            };
        };
        responses: {
            /** @description createGameStat 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameStatEntity"];
                };
            };
        };
    };
    deleteGameStat: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameStatEntity"];
            };
        };
        responses: {
            /** @description deleteGameStat 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPlayerStats: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getPlayerStats 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerStatEntity"][];
                };
            };
        };
    };
    updatePlayerStat: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PlayerGameStatUpdateRequest"];
            };
        };
        responses: {
            /** @description updatePlayerStat 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerStatEntity"];
                };
            };
        };
    };
    getPlayerStatHistory: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getPlayerStatHistory 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StatUpdateHistoryEntity"][];
                };
            };
        };
    };
    getPlayerStatHistory_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                playerId: number;
                statApiName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description getPlayerStatHistory_1 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StatUpdateHistoryEntity"][];
                };
            };
        };
    };
    me: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description me 200 response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
}
